Temat: Automatyczne testy funkcjonalne stron WWW w oparciu o wybrane narzędzia

Cel i zakres pracy:

Celem pracy jest porównanie metod i narzędzi do tworzenia skryptów automatycznie wykonujšcych testy funkcjonalne stron WWW. W pracy wskazane zostanš wady i zalety testów automatycznych oraz oszacowany zostanie wpływ testów automatycznych na wydajność testowania oprogramowania. Dodatkowo narzędzia wybrane w pracy zostanš skalsyfikowane pod względem zaawansowania, czyli jakie funkcjonalnoci sš oferujš oraz wymogów jakie musi spełnić użytkownik aby moc zaczšć pracę z konkretnym narzędziem.

Praca będzie obejmować utworzenie manualnego skryptu testów funkcjonalnych przykładowej strony webowej. Skrypt ten powstanie zgodnie z metodykš BDD (Behavior-Driven Development). Wyróżnione zostanš funkcjonalnoci strony, scenariusze testowe oraz przypadki testowe. Następnie na postawie tego dokumentu, przy użyciu kilku narzędzi do automatyzacji powstanš skrypty automatyczne. W każdym narzędziu zostanš napisane skrypty automatyczne pokrywajšce się ze skryptem manualnym. Następnie opiszę proces powstawania każdego ze skryptu, napotkane problemy i spostrzeżenia. Będę mierzyć czas w którym będš powstawały skrypty, nakład pracy i inne czynniki wpływajšce na pracę przy testach. Na koniec zmierzę i porównam czas działania skryptów. Procent pokrycia testów automatycznych z testem manualnym, oraz możliwoć wykonywania skryptów na kilku przeglšdarkach. 

### Welcome to GitHub Pages.
This automatic page generator is the easiest way to create beautiful pages for all of your projects. Author your page content here using GitHub Flavored Markdown, select a template crafted by a designer, and publish. After your page is generated, you can check out the new branch:

```
$ cd your_repo_root/repo_name
$ git fetch origin
$ git checkout gh-pages
```

If you're using the GitHub for Mac, simply sync your repository and you'll see the new branch.

### Designer Templates
We've crafted some handsome templates for you to use. Go ahead and continue to layouts to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved if it remained markdown format.

### Rather Drive Stick?
If you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator written by our own Tom Preston-Werner. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.

### Authors and Contributors
You can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor's GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.

### Support or Contact
Having trouble with Pages? Check out the documentation at https://help.github.com/pages or contact support@github.com and we’ll help you sort it out.
